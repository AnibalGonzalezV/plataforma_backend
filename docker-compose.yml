version: '3.8'

services:
  postgres:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - '5432:5432'

  user-service:
    build: ./services/microservice-users
    ports:
      - '3002:3002'
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
    depends_on:
      - postgres
    entrypoint:
      [
        'sh',
        '-c',
        'until nc -z ${DB_HOST} ${DB_PORT}; do echo "Esperando PostgreSQL..."; sleep 1; done; yarn start:prod',
      ]

  seed-users:
    build: ./services/microservice-users
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
    depends_on:
      - postgres
    command: sh -c "until nc -z user-service 3002; do echo 'Esperando PostgresSQL...'; sleep 1; done; yarn seed:prod"

  auth-service:
    build: ./services/microservice-auth
    ports:
      - '3001:3001'
    environment:
      USER_SERVICE_URL: ${USER_SERVICE_URL}
      JWT_SECRET: ${JWT_SECRET}
    depends_on:
      - user-service
    entrypoint:
      [
        'sh',
        '-c',
        'until nc -z ${DB_HOST} ${DB_PORT}; do echo "Esperando PostgreSQL..."; sleep 1; done; yarn start:prod',
      ]

  api-gateway:
    build: ./api_gateway
    ports:
      - '3003:3003'
    environment:
      JWT_SECRET: ${JWT_SECRET}
    volumes:
      - ./api_gateway/public:/app/public
    depends_on:
      - auth-service
      - user-service

  metrics-service:
    build: ./services/microservice-metrics
    ports:
      - '3004:3004'
    environment:
      USER_SERVICE_URL: ${USER_SERVICE_URL}
    depends_on:
      - user-service
      - auth-service
      - orders-service
    entrypoint:
      [
        'sh',
        '-c',
        'until nc -z ${DB_HOST} ${DB_PORT}; do echo "Esperando PostgreSQL..."; sleep 1; done; yarn start:prod',
      ]

  orders-service:
    build: ./services/microservice-orders
    ports:
      - '3005:3005'
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      USER_SERVICE_URL: ${USER_SERVICE_URL}
      PRODUCT_SERVICE_URL: ${PRODUCT_SERVICE_URL}
    depends_on:
      - postgres
      - user-service
      - auth-service
    entrypoint:
      [
        'sh',
        '-c',
        'until nc -z ${DB_HOST} ${DB_PORT}; do echo "Esperando PostgreSQL..."; sleep 1; done; yarn start:prod',
      ]

  seed-orders:
    build: ./services/microservice-orders
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      USER_SERVICE_URL: ${USER_SERVICE_URL}
      PRODUCT_SERVICE_URL: ${PRODUCT_SERVICE_URL}
    depends_on:
      - postgres
      - user-service
      - products-service
    command: >
      sh -c "
        until nc -z user-service 3002; do echo 'Esperando user-service...'; sleep 1; done;
        until nc -z products-service 3006; do echo 'Esperando products-service...'; sleep 1; done;
        yarn seed:prod
      "

  products-service:
    build: ./services/microservice-product
    ports:
      - '3006:3006'
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      USER_SERVICE_URL: ${USER_SERVICE_URL}
      PRODUCT_SERVICE_URL: ${PRODUCT_SERVICE_URL}
    depends_on:
      - postgres
      - user-service
      - auth-service
      - orders-service
    entrypoint:
      [
        'sh',
        '-c',
        'until nc -z ${DB_HOST} ${DB_PORT}; do echo "Esperando PostgreSQL..."; sleep 1; done; yarn start:prod',
      ]

  seed-products:
    build: ./services/microservice-product
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
    depends_on:
      - postgres
    command: sh -c "until nc -z products-service 3006; do echo 'Esperando PostgresSQL...'; sleep 1; done; yarn seed:prod"

volumes:
  postgres_data:
